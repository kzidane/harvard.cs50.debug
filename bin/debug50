#!/bin/bash

# check args
if [ $# -lt 1 ]; then
    echo "Usage: $0 executable [arguments]"
    exit 1
fi

# set c9 bin path for online/offline
if [ ${IDE_OFFLINE+x} ]; then
    C9="/var/c9sdk/bin/c9"
else
    C9="/mnt/shared/sbin/c9"
fi
C9="$C9 exec"

# allow force-stopping
if [ "$1" = "-HUP" ]; then
    $C9 gdb50forcestop
    exit 0
fi

# ensure file is executable and debuggable
# http://stackoverflow.com/a/10319835/1797347
# http://stackoverflow.com/a/12801855/1797347
if ! [ $(file "$1" | grep -o executable) ]; then
    echo "Can't debug this program! Afraid debug50 only supports compiled C programs!"
    exit 1
elif ! [ "$(readelf -wL "$1")" ]; then
    echo "Can't debug this program! Are you sure you compiled it with -ggdb?"
    exit 1
fi

# PID of current execution
PID=$$

# SIGUSR1 signals to begin the shim
SHIM="/home/ubuntu/.c9/bin/c9gdbshim.js"
trap "node $SHIM $*; $C9 stopdebug50 $PID; echo; exit 0" SIGUSR1

# give PID to proxy for monitoring
ERR="$($C9 startdebug50 $PID)"

# c9 exec doesn't return non-zero on error!
if [ "$ERR" = "Could not execute startdebug50" ]; then
    echo "Unable to start!"
    exit 1
fi

# wait 5 minutes to start or quit this process
DELAY=300
while [ $DELAY -gt 0 ]; do sleep 1; DELAY=$((DELAY-1)); done
